@inject UserRegistrationService userRegistrationService
@rendermode InteractiveServer
@implements IDisposable


<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">OsipogShop</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/productpage">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bag-plus" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M8 7.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V12a.5.5 0 0 1-1 0v-1.5H6a.5.5 0 0 1 0-1h1.5V8a.5.5 0 0 1 .5-.5" />
                    <path d="M8 1a2.5 2.5 0 0 1 2.5 2.5V4h-5v-.5A2.5 2.5 0 0 1 8 1m3.5 3v-.5a3.5 3.5 0 1 0-7 0V4H1v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V4zM2 5h12v9a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1z" />
                </svg>
                <span aria-hidden="true"></span> Store
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="regist">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Regist
            </NavLink>
        </div>

        @if (userRegistrationService?.CurrentUser?.Role == "Moderator")
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="moderation">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Moderation
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    protected override void OnInitialized()
    {
        userRegistrationService.OnCurrentUserChanged += HandleCurrentUserChanged;
    }

    private void HandleCurrentUserChanged()
    {
        InvokeAsync(StateHasChanged); //https://www.youtube.com/watch?v=JoSwm6HAYgM&ab_channel=TutorialsTeam
    }

    public void Dispose()
    {
        userRegistrationService.OnCurrentUserChanged -= HandleCurrentUserChanged;
    }
}