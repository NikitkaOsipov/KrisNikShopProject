@inject UserRegistrationService userRegistrationService

@if (userRegistrationService.CurrentUser != null)
{
    <div class="dropdown">
        <button  class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            @userRegistrationService.CurrentUser.Name
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <a class="dropdown-item" href="profile">Profile</a>
            <a class="dropdown-item" href="settings">Settings</a>
            <div class="dropdown-divider"></div>
            <a class="dropdown-item" href="logout">Logout</a>
        </div>
    </div>
}
else
{
    <a href="regist">Sign-up</a>
}

@code {
    protected override void OnInitialized()
    {
        userRegistrationService.OnCurrentUserChanged += HandleCurrentUserChanged;
    }

    private void HandleCurrentUserChanged()
    {
        InvokeAsync(StateHasChanged); //https://www.youtube.com/watch?v=JoSwm6HAYgM&ab_channel=TutorialsTeam
    //     InvokeAsync(() =>
    // {
    //     StateHasChanged();
    //     NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    //});
    }

    public void Dispose()
    {
        userRegistrationService.OnCurrentUserChanged -= HandleCurrentUserChanged;
    }
}
