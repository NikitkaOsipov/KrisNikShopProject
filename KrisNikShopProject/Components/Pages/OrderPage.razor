@page "/orders/{UserId:int}"
@inject OrderStorageService OrderStorageService
@inject UserRegistrationService UserRegistrationService
@inject NavigationManager NavigationManager
@using KrisNikShopProject.Components.Pages

@rendermode InteractiveServer


@if (orderItems == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h1>@User.Name's ORDERS</h1>
    <ul>
        @foreach (var item in orderItems)
        {
            <div class="row">
                <div class="col-md-4">
                    <img src="@item.Image" alt="@item.Name" class="img-fluid" />
                </div>
                <div class="col-md-4">
                    <h5>@item.Name</h5>
                    <p>@item.Description</p>
                    <p>Price: @item.Price</p>
                    <p>Quantity: @item.Quantity</p>
                </div>
                <div class="col-md-4">
                    <button class="btn btn-primary" @onclick="() => ShowOrderDetails(item)">Details</button>
                </div>
            </div>
            <hr />
        }
    </ul>
}

@code {
    [Parameter]
    public int UserId { get; set; }
    public UserModel? User { get; set; }

    private List<OrderModel>? orderItems;

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() => User = UserRegistrationService.GetUserById(UserId));
        await Task.Run(() => orderItems = OrderStorageService.GetAllOrders(User));
    }

    private void ShowOrderDetails(OrderModel order)
    {
        NavigationManager.NavigateTo($"/orderdetail/{order.Id}/{User.Id}");
    }
}

<style>
    .order-list {
    padding: 10px;
}
.order-item {
    margin-bottom: 10px;
    border: 1px solid #ddd;
    border-radius: 3px;
    padding: 5px;
}
.order-img {
    max-height: 100px;
    object-fit: contain;
}
.order-name {
    font-weight: bold;
    margin-top: 5px;
    font-size: 0.9em;
}
.order-description {
    margin-top: 5px;
    font-size: 0.8em;
}
.order-price {
    margin-top: 5px;
    color: #f00;
    font-size: 0.8em;
}
</style>