@page "/productdetail/{Id}"
@inject ProductStorageService productStorageService
@inject CartStorageService cartStorageService
@inject UserRegistrationService userRegistrationService

@rendermode InteractiveServer

@if (product == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="product-detail">
        <h2>@product.Name</h2>
        <img src="@product.Image" alt="@product.Name" style="width:150px; height:200px;" />
        <p>@product.Description</p>
        <p>Price: @product.Price.ToString("C")</p>
        @if (userRegistrationService.CurrentUser == null)
        {
            <p style="color:red;">You must <a href="/sign-in">sign in</a> to add products to the cart.</p>
        } else
        {
            <button class="btn btn-primary" @onclick="AddToCart">Add to Cart</button>
            <div class="quantity-control">
                <p>Quantity:</p>
                <input type="range" min="@MinValue" max="@MaxValue" @bind="CurrentValue" @oninput="ValueChanged" />
                <InputNumber class="quantity-input" @bind-Value="CurrentValue" min="@MinValue" max="@MaxValue" />
                <p>Total Price: @((decimal)product.Price * (decimal)CurrentValue)</p>
            </div>
            @if (isAddedToCart)
            {
                <p>Product was added to cart.</p>
            }
        }
    </div>
}

@code {    
    public int MinValue { get; set; } = 1;
    public int MaxValue { get; set; } = 50;
    public int CurrentValue { get; set; } = 1;
    public EventCallback<int> CurrentValueChanged { get; set; }

    private async Task ValueChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value.ToString(), out int newValue))
        {
            CurrentValue = newValue;
            await CurrentValueChanged.InvokeAsync(CurrentValue);
        }
    }

    [Parameter]
    public string? Id { get; set; }

    private ProductModel? product;
    private bool isAddedToCart = false;

    protected override async Task OnInitializedAsync()
    {
        product = await Task.Run(() => productStorageService.GetProductById(int.Parse(Id)));
    }

    private void AddToCart()
    {
        cartStorageService.AddProduct(product, CurrentValue);
        isAddedToCart = true;
        userRegistrationService.SignInUser(userRegistrationService.CurrentUser);
    }
}

<style>
    .quantity-control {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-top: 20px;
    }

    .quantity-input {
        width: 50px;
    }
</style>