@page "/profile"
@inject NavigationManager NavigationManager
@inject UserRegistrationService userRegistrationService
@rendermode InteractiveServer

@if (ShowCardSubmitPage)
{
    <CardSubmitPage OnCancel="HideCardSubmitPage" CardSubmissionCompletionSource="tcs" />
}

<div class="container">
    <h2>@userRegistrationService?.CurrentUser?.Name's Profile</h2>
    <div class="profile-info">
        <p><strong>Email:</strong> @userRegistrationService?.CurrentUser?.Email</p>
        <p><strong>Username:</strong> @userRegistrationService?.CurrentUser?.Name</p>
        <p><strong>Phone number:</strong> @userRegistrationService?.CurrentUser?.PhoneNumber</p>
        <p><strong>Date of creation:</strong> @userRegistrationService?.CurrentUser?.DateOfCreating</p>
    </div>
    <button class="btn btn-primary" @onclick="NavigateToEditPage">Edit Profile</button>
    <button class="btn btn-primary" @onclick="ChangeCard">Edit Card</button>
</div>

@code {
    public bool ShowCardSubmitPage { get; set; }

    private TaskCompletionSource<bool>? tcs;

    private void NavigateToEditPage()
    {
        NavigationManager.NavigateTo($"/editprofile/{userRegistrationService.CurrentUser!.Email}");
    }

    private async void ChangeCard()
    {
        tcs = new TaskCompletionSource<bool>();
        ShowCardSubmitPage = true;
        StateHasChanged();
        await tcs.Task;
    }

    private void HideCardSubmitPage(bool isCardSubmissionSuccessful = false)
    {
        ShowCardSubmitPage = false;
        if (isCardSubmissionSuccessful && tcs != null && !tcs.Task.IsCompleted)
        {
            tcs.SetResult(true);
        }
    }
}