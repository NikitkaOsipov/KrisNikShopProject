@page "/todo" 
@rendermode InteractiveServer 
<h3>Todo (@todos.Count(todo => !todo.IsDone))</h3> 
<input @bind="newTodo" /> <button @onclick="AddTodo">Add todo</button> 
<ul> 
    @foreach (var todo in todos) { 
    <li>
        <input type="checkbox" @bind="todo.IsDone" /> 
        <input @bind="todo.Title" /> 
    </li> 
    } 
    </ul> 
    
@code 
{ 
    private List<TodoItem>? todos; 
    string newTodo = ""; 
    private static readonly string FILE_NAME = Path.Combine(Directory.GetCurrentDirectory(), Path.Combine("Components", "Collections", "ToDoList.csv")); 

    protected override void OnInitialized() 
    {
         todos = ReadToDo(); 
    } 

    public static List<TodoItem> ReadToDo() 
    { 
        List<TodoItem> users = new List<TodoItem>(); 
        using (var reader = new StreamReader(FILE_NAME)) 
        {
            while (!reader.EndOfStream)
            { 
                string[] line = reader.ReadLine()!.Split(",");
                TodoItem item = new TodoItem { Title = line[0] };
                item.isDoneSet(Boolean.Parse(line[1]));
                users.Add(item);
            }
        }
        return users; 
    } 

    @* public static void ReWrite(TodoItem todo)
    {
        List<TodoItem> todos = ReadToDo();
        for (int i = 0; i < todos.Count; i++)
        {
            if(todos[i].Title == todo.Title)
            {
                todos[i].IsDone = todo.IsDone;
            }
        }
        
        using (StreamWriter sw = new StreamWriter(FILE_NAME, false)) 
        { 
            foreach (var item in todos)
            {
                sw.WriteLine(todo.Title + ", " + todo.IsDone); 
            }
                
        } 
    } *@

    void AddTodo() 
        { 
        if (!string.IsNullOrWhiteSpace(newTodo))
            { 
            TodoItem todo = new TodoItem { Title = newTodo };
                todos.Add(new TodoItem { Title = newTodo });
                using (StreamWriter sw = new StreamWriter(FILE_NAME, true)) 
                { 
                sw.WriteLine(todo.Title + ", " + todo.IsDone); 
                } 
            newTodo = string.Empty; 
            } 
        } 

    public class TodoItem 
    { 
        public string? Title { get; set; } 
        private bool isDone = false; 
        public bool IsDone 
        {
            get => isDone; 
            set 
            {
                isDone = value;
                @* ReWrite(this); *@
            }
        }

        public void isDoneSet(bool value)
        {
            isDone = value;
        }
    } 
}